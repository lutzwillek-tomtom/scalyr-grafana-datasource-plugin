name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
permissions:
  contents: read
jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: '16.x'
      # Ref: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache path
        id: yarn-cache-path
        run: echo "::set-output name=path::$(yarn cache dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-path.outputs.path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      # Not recommened to cache node_modules
      # Ref: https://github.com/actions/cache/blob/main/examples.md#node---npm
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build and test
        run: yarn build
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 'stable'
      # `mage format` would reformat files
      - name: gofmt check
        run: test -z "$(gofmt -l pkg)"
      #- uses: magefile/mage-action@v2
      #  with:
      #    args: lint
      - uses: golangci/golangci-lint-action@v3
        with:
          version: 'latest'
          working-directory: pkg
          args: '--timeout 3m'
      - uses: magefile/mage-action@v2
        with:
          args: test
      - uses: magefile/mage-action@v2
        with:
          args: buildall
